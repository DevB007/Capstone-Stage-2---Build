commit 10a32fa0319b9cdeac428f2a4568cb7cd3a6ccdb
Author: Deepankar <deepankar@vitamap.com>
Date:   Wed Apr 26 06:57:07 2017 +0530

    Added login screen. Added Butterknife.

diff --git a/app/build.gradle b/app/build.gradle
index 506ad6b..ab93518 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -50,6 +50,9 @@ dependencies {
     // FirebaseUI Auth only
     compile 'com.firebaseui:firebase-ui-auth:1.2.0'
 
+    compile 'com.jakewharton:butterknife:8.5.1'
+    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
+
     testCompile 'junit:junit:4.12'
 }
 
diff --git a/app/google-services.json b/app/google-services.json
index 8914acb..8be2d37 100644
--- a/app/google-services.json
+++ b/app/google-services.json
@@ -15,6 +15,14 @@
       },
       "oauth_client": [
         {
+          "client_id": "124449345960-admv3seplf4hr3qis3vtadpmaa05shor.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.example.deveshwar.imalive",
+            "certificate_hash": "41a7efaa600f62994c7d40d81c92415954ccfcb1"
+          }
+        },
+        {
           "client_id": "124449345960-kr2c375uahco4dlsavi3e94i1olq9pnn.apps.googleusercontent.com",
           "client_type": 1,
           "android_info": {
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index eda0408..9b9c97a 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -1,30 +1,25 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.deveshwar.imalive">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.READ_CONTACTS" />
-    <uses-permission android:name="android.permission.SEND_SMS" />
-    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+<manifest package="com.example.deveshwar.imalive"
+          xmlns:android="http://schemas.android.com/apk/res/android">
 
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.READ_CONTACTS"/>
+    <uses-permission android:name="android.permission.SEND_SMS"/>
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
 
 
     <application
+        android:name=".IMaliveApplication"
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:supportsRtl="true"
-        android:name=".IMaliveApplication"
         android:theme="@style/AppTheme">
         <activity
             android:name=".MainActivity"
             android:label="@string/app_name"
             android:theme="@style/AppTheme.NoActionBar">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
 
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
         </activity>
         <activity
             android:name=".ReminderComposerActivity"
@@ -32,24 +27,34 @@
         <activity
             android:name=".MessageComposerActivity"
             android:theme="@style/AppTheme.NoActionBar"></activity>
+        <!-- Auth UI demo -->
+        <activity
+            android:name=".AuthUiActivity"
+            android:label="Signin">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+        </activity>
 
         <service
             android:name=".IMaliveWidgetService"
-            android:permission="android.permission.BIND_REMOTEVIEWS" />
+            android:permission="android.permission.BIND_REMOTEVIEWS"/>
 
         <receiver android:name=".AlarmReceiver"></receiver>
         <receiver android:name=".BootReceiver">
             <intent-filter>
-                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <action android:name="android.intent.action.BOOT_COMPLETED"/>
             </intent-filter>
         </receiver>
         <receiver android:name=".IMaliveWidgetProvider">
             <intent-filter>
-                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
+                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
             </intent-filter>
             <meta-data
                 android:name="android.appwidget.provider"
-                android:resource="@xml/appwidget_info" />
+                android:resource="@xml/appwidget_info"/>
         </receiver>
 
         <meta-data
diff --git a/app/src/main/java/com/example/deveshwar/imalive/AuthUiActivity.java b/app/src/main/java/com/example/deveshwar/imalive/AuthUiActivity.java
new file mode 100644
index 0000000..ff33ef0
--- /dev/null
+++ b/app/src/main/java/com/example/deveshwar/imalive/AuthUiActivity.java
@@ -0,0 +1,162 @@
+/*
+ * Copyright 2016 Google Inc. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
+ * in compliance with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the
+ * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.example.deveshwar.imalive;
+
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.MainThread;
+import android.support.annotation.StringRes;
+import android.support.design.widget.Snackbar;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.widget.Button;
+
+import com.firebase.ui.auth.AuthUI;
+import com.firebase.ui.auth.AuthUI.IdpConfig;
+import com.firebase.ui.auth.ErrorCodes;
+import com.firebase.ui.auth.IdpResponse;
+import com.firebase.ui.auth.ResultCodes;
+import com.google.firebase.auth.FirebaseAuth;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import butterknife.OnClick;
+
+public class AuthUiActivity extends AppCompatActivity {
+    private static final String UNCHANGED_CONFIG_VALUE = "CHANGE-ME";
+    private static final String GOOGLE_TOS_URL = "https://www.google.com/policies/terms/";
+    private static final String FIREBASE_TOS_URL = "https://firebase.google.com/terms/";
+    private static final int RC_SIGN_IN = 100;
+
+    @BindView(R.id.sign_in)
+    Button mSignIn;
+
+    @BindView(R.id.root)
+    View mRootView;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        FirebaseAuth auth = FirebaseAuth.getInstance();
+        if (auth.getCurrentUser() != null) {
+            startActivity(MainActivity.createIntent(this, null));
+            finish();
+        }
+
+        setContentView(R.layout.auth_ui_layout);
+        ButterKnife.bind(this);
+
+        if (!isGoogleConfigured()) {
+            showSnackbar(R.string.configuration_required);
+        }
+    }
+
+    @OnClick(R.id.sign_in)
+    public void signIn(View view) {
+        startActivityForResult(
+                AuthUI.getInstance().createSignInIntentBuilder()
+                        .setTheme(R.style.AppTheme)
+                        .setLogo(getSelectedLogo())
+                        .setProviders(getSelectedProviders())
+                        .setTosUrl(getSelectedTosUrl())
+                        .setIsSmartLockEnabled(false)
+                        .setAllowNewEmailAccounts(false)
+                        .build(),
+                RC_SIGN_IN);
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == RC_SIGN_IN) {
+            handleSignInResponse(resultCode, data);
+            return;
+        }
+
+        showSnackbar(R.string.unknown_response);
+    }
+
+    @MainThread
+    private void handleSignInResponse(int resultCode, Intent data) {
+        IdpResponse response = IdpResponse.fromResultIntent(data);
+
+        // Successfully signed in
+        if (resultCode == ResultCodes.OK) {
+            startActivity(MainActivity.createIntent(this, response));
+            finish();
+            return;
+        } else {
+            // Sign in failed
+            if (response == null) {
+                // User pressed back button
+                showSnackbar(R.string.sign_in_cancelled);
+                return;
+            }
+
+            if (response.getErrorCode() == ErrorCodes.NO_NETWORK) {
+                showSnackbar(R.string.no_internet_connection);
+                return;
+            }
+
+            if (response.getErrorCode() == ErrorCodes.UNKNOWN_ERROR) {
+                showSnackbar(R.string.unknown_error);
+                return;
+            }
+        }
+
+        showSnackbar(R.string.unknown_sign_in_responnse);
+    }
+
+    @MainThread
+    @DrawableRes
+    private int getSelectedLogo() {
+        return R.drawable.ic_heart;
+    }
+
+    @MainThread
+    private List<IdpConfig> getSelectedProviders() {
+        List<IdpConfig> selectedProviders = new ArrayList<>();
+        selectedProviders.add(new IdpConfig.Builder(AuthUI.GOOGLE_PROVIDER).build());
+        return selectedProviders;
+    }
+
+    @MainThread
+    private String getSelectedTosUrl() {
+        return FIREBASE_TOS_URL;
+    }
+
+    @MainThread
+    private boolean isGoogleConfigured() {
+        return !UNCHANGED_CONFIG_VALUE.equals(
+                getString(R.string.default_web_client_id));
+    }
+
+    @MainThread
+    private void showSnackbar(@StringRes int errorMessageRes) {
+        Snackbar.make(mRootView, errorMessageRes, Snackbar.LENGTH_LONG).show();
+    }
+
+    public static Intent createIntent(Context context) {
+        Intent in = new Intent();
+        in.setClass(context, AuthUiActivity.class);
+        return in;
+    }
+}
diff --git a/app/src/main/java/com/example/deveshwar/imalive/MainActivity.java b/app/src/main/java/com/example/deveshwar/imalive/MainActivity.java
index cb9560b..ad329f0 100644
--- a/app/src/main/java/com/example/deveshwar/imalive/MainActivity.java
+++ b/app/src/main/java/com/example/deveshwar/imalive/MainActivity.java
@@ -1,5 +1,6 @@
 package com.example.deveshwar.imalive;
 
+import android.content.Context;
 import android.content.Intent;
 import android.database.Cursor;
 import android.net.Uri;
@@ -12,33 +13,50 @@ import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.Toolbar;
 import android.view.View;
 
+import com.firebase.ui.auth.IdpResponse;
 import com.google.android.gms.ads.AdRequest;
 import com.google.android.gms.ads.AdView;
 
 import java.util.ArrayList;
 import java.util.List;
 
+import butterknife.BindView;
+import butterknife.ButterKnife;
+
 public class MainActivity extends AppCompatActivity {
 
-    private AdView mAdView;
     private static final int PICK_CONTACT_REQUEST_CODE = 0;
+
     private RemindersAdapter adapter;
     private List<Reminder> reminders;
 
+    @BindView(R.id.adView)
+    AdView mAdView;
+
+    @BindView(R.id.toolbar)
+    Toolbar toolbar;
+
+    @BindView(R.id.rvReminders)
+    RecyclerView rvReminders;
+
+    @BindView(R.id.fab)
+    FloatingActionButton fab;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        mAdView = (AdView) findViewById(R.id.adView);
+        ButterKnife.bind(this);
+
         AdRequest adRequest = new AdRequest.Builder().build();
         mAdView.loadAd(adRequest);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+
         setSupportActionBar(toolbar);
+
         // TODO read reminders from db async
         reminders = new ArrayList<>();
         handleEmptyState();
 
-        RecyclerView rvReminders = (RecyclerView) findViewById(R.id.rvReminders);
         adapter = new RemindersAdapter(reminders);
         rvReminders.setAdapter(adapter);
         rvReminders.setLayoutManager(new LinearLayoutManager(this));
@@ -47,7 +65,6 @@ public class MainActivity extends AppCompatActivity {
                 DividerItemDecoration(this, DividerItemDecoration.VERTICAL_LIST);
         rvReminders.addItemDecoration(itemDecoration);
 
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
         fab.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -104,6 +121,12 @@ public class MainActivity extends AppCompatActivity {
             findViewById(R.id.empty_state).setVisibility(View.GONE);
         }
     }
+
+    public static Intent createIntent(Context context, IdpResponse idpResponse) {
+        Intent in = IdpResponse.getIntent(idpResponse);
+        in.setClass(context, MainActivity.class);
+        return in;
+    }
 }
 
 
diff --git a/app/src/main/java/com/example/deveshwar/imalive/MessageComposerActivity.java b/app/src/main/java/com/example/deveshwar/imalive/MessageComposerActivity.java
index 01631c9..e4e40d7 100644
--- a/app/src/main/java/com/example/deveshwar/imalive/MessageComposerActivity.java
+++ b/app/src/main/java/com/example/deveshwar/imalive/MessageComposerActivity.java
@@ -42,21 +42,37 @@ import java.io.InputStreamReader;
 import java.net.HttpURLConnection;
 import java.net.URL;
 
+import butterknife.BindView;
+import butterknife.ButterKnife;
+
 public class MessageComposerActivity extends AppCompatActivity implements GoogleApiClient
         .OnConnectionFailedListener {
 
     private static final int PLACE_PICKER_REQUEST = 1;
     private Bundle intentExtras;
-    private FloatingActionButton sendMessageFAB;
-    private EditText aliveMessage;
+
     private Reminder reminder;
+
     private GoogleApiClient mGoogleApiClient;
     private ProgressDialog progressDialog;
 
+    @BindView(R.id.send_message_fab)
+    FloatingActionButton sendMessageFAB;
+
+    @BindView(R.id.alive_message)
+    EditText aliveMessage;
+
+    @BindView(R.id.contact_photo)
+    ImageView contactPhotoIv;
+
+    @BindView(R.id.toolbar)
+    Toolbar toolbar;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_message_composer);
+        ButterKnife.bind(this);
 
         mGoogleApiClient = new GoogleApiClient
                 .Builder(this)
@@ -71,15 +87,10 @@ public class MessageComposerActivity extends AppCompatActivity implements Google
         //reminder = realm.where(Reminder.class).equalTo("id", intentExtras.getInt("reminderId",
         // -1)).findFirst();
 
-        ImageView contactPhotoIv = (ImageView) findViewById(R.id.contact_photo);
-        sendMessageFAB = (FloatingActionButton) findViewById(R.id.send_message_fab);
-        aliveMessage = (EditText) findViewById(R.id.alive_message);
-
         String contactPhoto = reminder.getContactPhoto();
 
         aliveMessage.setText(reminder.getText());
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         toolbar.setTitle(reminder.getContactName());
         setSupportActionBar(toolbar);
 
diff --git a/app/src/main/java/com/example/deveshwar/imalive/ReminderComposerActivity.java b/app/src/main/java/com/example/deveshwar/imalive/ReminderComposerActivity.java
index 3ad0b0d..98b5d94 100644
--- a/app/src/main/java/com/example/deveshwar/imalive/ReminderComposerActivity.java
+++ b/app/src/main/java/com/example/deveshwar/imalive/ReminderComposerActivity.java
@@ -1,8 +1,5 @@
 package com.example.deveshwar.imalive;
 
-import android.app.Dialog;
-import android.app.DialogFragment;
-import android.app.TimePickerDialog;
 import android.content.Intent;
 import android.graphics.Typeface;
 import android.net.Uri;
@@ -11,79 +8,82 @@ import android.support.design.widget.FloatingActionButton;
 import android.support.design.widget.Snackbar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
-import android.text.format.DateFormat;
 import android.view.View;
 import android.widget.Button;
 import android.widget.CheckBox;
 import android.widget.CompoundButton;
 import android.widget.EditText;
 import android.widget.ImageView;
-import android.widget.TimePicker;
 
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.Calendar;
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import butterknife.OnCheckedChanged;
 
-public class ReminderComposerActivity extends AppCompatActivity {
+public class ReminderComposerActivity extends AppCompatActivity implements TimePickerFragment
+        .OnTimeSetListener {
 
     private Intent intentExtras;
-    private FloatingActionButton saveReminderFAB;
-    private static Button reminderTimePickerButton;
-    public static String reminderDeliveryTime;
-    private Button reminderDeleteButton;
-    private EditText reminderMessage;
-    private CheckBox reminderDeliveryDaySundayButton;
-    private CheckBox reminderDeliveryDayMondayButton;
-    private CheckBox reminderDeliveryDayTuesdayButton;
-    private CheckBox reminderDeliveryDayWednesdayButton;
-    private CheckBox reminderDeliveryDayThursdayButton;
-    private CheckBox reminderDeliveryDayFridayButton;
-    private CheckBox reminderDeliveryDaySaturdayButton;
+
+    @BindView(R.id.save_reminder_fab)
+    FloatingActionButton saveReminderFAB;
+
+    @BindView(R.id.reminder_time_picker_button)
+    Button reminderTimePickerButton;
+
+    @BindView(R.id.reminder_delete_button)
+    Button reminderDeleteButton;
+
+    @BindView(R.id.reminder_message)
+    EditText reminderMessage;
+
+    @BindView(R.id.message_delivery_day_sunday_button)
+    CheckBox reminderDeliveryDaySundayButton;
+
+    @BindView(R.id.message_delivery_day_monday_button)
+    CheckBox reminderDeliveryDayMondayButton;
+
+    @BindView(R.id.message_delivery_day_tuesday_button)
+    CheckBox reminderDeliveryDayTuesdayButton;
+
+    @BindView(R.id.message_delivery_day_wednesday_button)
+    CheckBox reminderDeliveryDayWednesdayButton;
+
+    @BindView(R.id.message_delivery_day_thursday_button)
+    CheckBox reminderDeliveryDayThursdayButton;
+
+    @BindView(R.id.message_delivery_day_friday_button)
+    CheckBox reminderDeliveryDayFridayButton;
+
+    @BindView(R.id.message_delivery_day_saturday_button)
+    CheckBox reminderDeliveryDaySaturdayButton;
+
+    @BindView(R.id.toolbar)
+    Toolbar toolbar;
+
+    @BindView(R.id.contact_photo)
+    ImageView contactPhotoIv;
 
     private String contactName;
     private String contactNumber;
     private String contactPhoto;
 
     private boolean isEditing;
+
     private Reminder reminder;
 
-    @Override
+    private String reminderDeliveryTime;
 
+    @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_reminder_composer);
+        ButterKnife.bind(this);
 
         intentExtras = getIntent();
 
-        ImageView contactPhotoIv = (ImageView) findViewById(R.id.contact_photo);
-        saveReminderFAB = (FloatingActionButton) findViewById(R.id.save_reminder_fab);
-        reminderMessage = (EditText) findViewById(R.id.reminder_message);
-        reminderTimePickerButton = (Button) findViewById(R.id.reminder_time_picker_button);
-        reminderDeleteButton = (Button) findViewById(R.id.reminder_delete_button);
-        reminderDeliveryDaySundayButton = (CheckBox) findViewById(R.id.message_delivery_day_sunday_button);
-        reminderDeliveryDayMondayButton = (CheckBox) findViewById(R.id.message_delivery_day_monday_button);
-        reminderDeliveryDayTuesdayButton = (CheckBox) findViewById(R.id.message_delivery_day_tuesday_button);
-        reminderDeliveryDayWednesdayButton = (CheckBox) findViewById(R.id.message_delivery_day_wednesday_button);
-        reminderDeliveryDayThursdayButton = (CheckBox) findViewById(R.id.message_delivery_day_thursday_button);
-        reminderDeliveryDayFridayButton = (CheckBox) findViewById(R.id.message_delivery_day_friday_button);
-        reminderDeliveryDaySaturdayButton = (CheckBox) findViewById(R.id.message_delivery_day_saturday_button);
-
-        reminderDeliveryDaySundayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-        reminderDeliveryDayMondayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-        reminderDeliveryDayTuesdayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-        reminderDeliveryDayWednesdayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-        reminderDeliveryDayThursdayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-        reminderDeliveryDayFridayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-        reminderDeliveryDaySaturdayButton
-                .setOnCheckedChangeListener(onReminderDeliveryDayCheckChanged);
-
         if (intentExtras.hasExtra("reminderId")) {
             isEditing = true;
             //reminder = realm.where(Reminder.class).equalTo("id", intentExtras.getIntExtra
@@ -137,7 +137,6 @@ public class ReminderComposerActivity extends AppCompatActivity {
             contactPhoto = intentExtras.getStringExtra("contactPhoto");
         }
 
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         toolbar.setTitle(contactName);
         setSupportActionBar(toolbar);
 
@@ -180,45 +179,38 @@ public class ReminderComposerActivity extends AppCompatActivity {
 
             @Override
             public void onClick(View v) {
-                DialogFragment timerPickerFragment = new TimePickerFragment();
+                TimePickerFragment timerPickerFragment = new TimePickerFragment();
+                timerPickerFragment.bind(ReminderComposerActivity.this);
                 timerPickerFragment.show(getFragmentManager(), "timePicker");
             }
         });
     }
 
-    public CompoundButton.OnCheckedChangeListener onReminderDeliveryDayCheckChanged = new CompoundButton.OnCheckedChangeListener() {
-
-        @Override
-        public void onCheckedChanged(CompoundButton buttonView,
-                                     boolean isChecked) {
-            if (!isChecked) {
-                buttonView.setTextColor(getResources().getColor(R.color.colorPrimaryText));
-                buttonView.setBackgroundResource(R.drawable.reminder_day_background_transparent);
-                buttonView.setTypeface(Typeface.DEFAULT);
-            } else {
-                buttonView.setTextColor(getResources().getColor(android.R.color.white));
-                buttonView.setBackgroundResource(R.drawable.reminder_day_background);
-                buttonView.setTypeface(Typeface.DEFAULT_BOLD);
-            }
-        }
-    };
-
-    public static class TimePickerFragment extends DialogFragment implements
-            TimePickerDialog.OnTimeSetListener {
-
-        @Override
-        public Dialog onCreateDialog(Bundle savedInstanceState) {
-            final Calendar c = Calendar.getInstance();
-            int hour = c.get(Calendar.HOUR_OF_DAY);
-            int minute = c.get(Calendar.MINUTE);
-            return new TimePickerDialog(getActivity(), this, hour, minute,
-                    DateFormat.is24HourFormat(getActivity()));
+    @OnCheckedChanged({R.id.message_delivery_day_sunday_button,
+            R.id.message_delivery_day_monday_button,
+            R.id.message_delivery_day_tuesday_button,
+            R.id.message_delivery_day_wednesday_button,
+            R.id.message_delivery_day_thursday_button,
+            R.id.message_delivery_day_friday_button,
+            R.id.message_delivery_day_saturday_button})
+    public void onReminderDeliveryDayCheckChanged(CompoundButton buttonView,
+                                                  boolean isChecked ) {
+        if (!isChecked) {
+            buttonView.setTextColor(getResources().getColor(R.color.colorPrimaryText));
+            buttonView.setBackgroundResource(R.drawable.reminder_day_background_transparent);
+            buttonView.setTypeface(Typeface.DEFAULT);
+        } else {
+            buttonView.setTextColor(getResources().getColor(android.R.color.white));
+            buttonView.setBackgroundResource(R.drawable.reminder_day_background);
+            buttonView.setTypeface(Typeface.DEFAULT_BOLD);
         }
 
-        public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
-            reminderDeliveryTime = Util.getFormattedTime(hourOfDay, minute);
-            reminderTimePickerButton.setText(Util.getHumanFormattedTime(reminderDeliveryTime));
-        }
+    }
+
+    @Override
+    public void onTimeSet(int hh, int mm) {
+        reminderDeliveryTime = Util.getFormattedTime(hh, mm);
+        reminderTimePickerButton.setText(Util.getHumanFormattedTime(reminderDeliveryTime));
     }
 
     public boolean isMessageCompositionValid() {
diff --git a/app/src/main/java/com/example/deveshwar/imalive/TimePickerFragment.java b/app/src/main/java/com/example/deveshwar/imalive/TimePickerFragment.java
new file mode 100644
index 0000000..9233fbf
--- /dev/null
+++ b/app/src/main/java/com/example/deveshwar/imalive/TimePickerFragment.java
@@ -0,0 +1,41 @@
+package com.example.deveshwar.imalive;
+
+import android.app.Dialog;
+import android.app.DialogFragment;
+import android.app.TimePickerDialog;
+import android.os.Bundle;
+import android.text.format.DateFormat;
+import android.widget.TimePicker;
+
+import java.util.Calendar;
+
+/**
+ * @Author deepankar
+ * @date 26/4/17.
+ */
+public class TimePickerFragment extends DialogFragment
+        implements TimePickerDialog.OnTimeSetListener {
+
+    private OnTimeSetListener listener;
+
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        final Calendar c = Calendar.getInstance();
+        int hour = c.get(Calendar.HOUR_OF_DAY);
+        int minute = c.get(Calendar.MINUTE);
+        return new TimePickerDialog(getActivity(), this, hour, minute,
+                DateFormat.is24HourFormat(getActivity()));
+    }
+
+    public void bind(OnTimeSetListener listener) {
+        this.listener = listener;
+    }
+
+    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
+        listener.onTimeSet(hourOfDay, minute);
+    }
+
+    interface OnTimeSetListener {
+        void onTimeSet(int hh, int mm);
+    }
+}
diff --git a/app/src/main/res/layout/auth_ui_layout.xml b/app/src/main/res/layout/auth_ui_layout.xml
new file mode 100644
index 0000000..6f283c2
--- /dev/null
+++ b/app/src/main/res/layout/auth_ui_layout.xml
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout
+    android:id="@+id/root"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".AuthUiActivity">
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="16dp"
+            android:layout_marginLeft="24dp"
+            android:layout_marginRight="24dp"
+            android:layout_marginTop="16dp"
+            android:orientation="vertical"
+            android:paddingBottom="32dp">
+
+            <TextView
+                style="@style/Base.TextAppearance.AppCompat.Headline"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_horizontal"
+                android:gravity="center_horizontal"
+                android:drawableTop="@drawable/ic_heart"
+                android:text="@string/app_name"/>
+
+            <Button
+                android:id="@+id/sign_in"
+                style="@style/Widget.AppCompat.Button.Colored"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_margin="16dp"
+                android:text="@string/sign_in"/>
+        </LinearLayout>
+    </ScrollView>
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 3aebd30..08eb79e 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -40,4 +40,11 @@
     <string name="message_sent_message">Your IMalive message has been sent to</string>
     <string name="message_send_button">Send Message</string>
     <string name="banner_ad_unit_id">ca-app-pub-3940256099942544/6300978111</string>
+    <string name="sign_in">Sign In</string>
+    <string name="configuration_required">Configuration is required</string>
+    <string name="unknown_response">Unexpected onActivityResult response code</string>
+    <string name="unknown_sign_in_responnse">Unknown response from AuthUI sign-in</string>
+    <string name="sign_in_cancelled">Sign in cancelled</string>
+    <string name="no_internet_connection">No internet connection</string>
+    <string name="unknown_error">An unknown error occurred</string>
 </resources>
